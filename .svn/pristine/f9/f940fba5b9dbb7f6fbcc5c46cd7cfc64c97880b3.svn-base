package com.treemanage.treecomponent.parse;


import com.bocontainer.container.BOContainer;
import com.container.treecontainer.bo.TreeNode;
import com.container.treecontainer.util.ObjectUtils;
import com.treemanage.treecomponent.biz.intf.BeanStructureBiz;
import com.treemanage.treecomponent.bo.AttrStructureInfo;
import com.treemanage.treecomponent.bo.BeanStructureInfo;
import com.treemanage.treecomponent.enump.GeneratedValueType;
import com.treemanage.treecomponent.enump.JavaType;
import com.treemanage.treecomponent.util.ToolUtils;
import com.treemanage.treecomponent.vo.VOAttrStructureInfo;
import com.treemanage.treecomponent.vo.VOBeanStructureInfo;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import java.util.List;

/**
 * @author Mist
 * @version 1.0
 * @created 29-12-2019 9:40:39
 */
@Component
public class ParseViewAndBeanModule {

	@Autowired
	private BeanStructureBiz beanStructureBiz;

	public VOBeanStructureInfo parseBO2VO(BeanStructureInfo bean) {

		if(ObjectUtils.isNull(bean)) return null;

		VOBeanStructureInfo view = ToolUtils.autoCopyProperties(bean, VOBeanStructureInfo.class);

		parseJavaType(bean,view);

		parseGeneratedValue(view);

		return view;
	}

	public BeanStructureInfo parseVO2BO(VOBeanStructureInfo view) {

		BeanStructureInfo bean = ToolUtils.autoCopyProperties(view, BeanStructureInfo.class);

		parseJavaType(view,bean);

		parseGeneratedValue(view,bean);

		return null;
	}

	public List<TreeNode> parseBO2VO(List<TreeNode> treeNodes) {

		return null;
	}



	private void parseJavaType(BeanStructureInfo bean, VOBeanStructureInfo view) {

		List<VOAttrStructureInfo> voAttrStructureInfoList = view.getAttributes();
		List<AttrStructureInfo> attrStructureInfoList = bean.getAttributes();

		for (VOAttrStructureInfo oneVO:voAttrStructureInfoList) {
			for (AttrStructureInfo oneBO:attrStructureInfoList) {
				if(oneVO.getId() == oneBO.getId()){
					oneVO.setJavaType(getJavaType(oneBO));
				}
			}
		}

	}

	private String getJavaType(AttrStructureInfo oneBO) {
		return oneBO.getIfList()?"List<"+getJavaTypeValue(oneBO) +">":getJavaTypeValue(oneBO);
	}

	private String getJavaTypeValue(AttrStructureInfo oneBO) {
		if(oneBO.getJavaType() != JavaType.OBJECT.getCode()) return JavaType.getEnum(oneBO.getJavaType()).getValue();
		return beanStructureBiz.getNameByBeanId(oneBO.getBeanTypeId());
	}

	private void parseJavaType(VOBeanStructureInfo view, BeanStructureInfo bean) {

		List<VOAttrStructureInfo> voAttrStructureInfoList = view.getAttributes();
		List<AttrStructureInfo> attrStructureInfoList = bean.getAttributes();

		for (VOAttrStructureInfo oneVO:voAttrStructureInfoList) {
			for (AttrStructureInfo oneBO:attrStructureInfoList) {
				if(oneVO.getId() == oneBO.getId()){
					oneVO.setJavaType(getJavaType(oneBO));
				}
			}
		}
	}



	private void parseGeneratedValue(VOBeanStructureInfo view) {

		List<VOAttrStructureInfo> voAttrStructureInfoList = view.getAttributes();

		for (VOAttrStructureInfo oneVO:voAttrStructureInfoList) {
			if(!ObjectUtils.isNull(oneVO.getGeneratedValue()))
				oneVO.setGeneratedValue(GeneratedValueType.getEnum(Integer.parseInt(oneVO.getGeneratedValue())).getValue());
		}
	}

	private void parseGeneratedValue(VOBeanStructureInfo view,BeanStructureInfo bean) {

		List<VOAttrStructureInfo> voAttrStructureInfoList = view.getAttributes();
		List<AttrStructureInfo> attrStructureInfoList = bean.getAttributes();

		for (AttrStructureInfo oneBO:attrStructureInfoList) {
			for (VOAttrStructureInfo oneVO:voAttrStructureInfoList) {
				if(oneBO.getId() == oneVO.getId()){
					oneBO.setGeneratedValue(GeneratedValueType.getEnum(oneVO.getGeneratedValue()).getCode());
				}
			}
		}
	}



}